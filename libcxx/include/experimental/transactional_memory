// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCXX_TRANSACTIONAL_MEMORY
#define _LIBCXX_TRANSACTIONAL_MEMORY

/**
    experimental/transactional_memory synopsis

// C++next

namespace std {
namespace experimental {
inline namespace transactional_memory_v2 {

void transaction_start() const _NOEXCEPT;
void transaction_end() const _NOEXCEPT;

} // namespace transactional_memory_v2
} // namespace experimental
} // namespace std

*/

#include <__assert> // all public C++ headers provide the assertion handler
#include <experimental/__config>
//#include <mutex>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#  pragma GCC system_header
#endif

#ifndef _LIBCPP_HAS_NO_EXPERIMENTAL_TRANSACTIONAL_MEMORY_V2

_LIBCPP_BEGIN_NAMESPACE_EXPERIMENTAL_TRANSACTIONAL_MEMORY_V2

void transaction_start() _NOEXCEPT;

void transaction_end() _NOEXCEPT;

_LIBCPP_END_NAMESPACE_EXPERIMENTAL_TRANSACTIONAL_MEMORY_V2

#endif // _LIBCPP_HAS_NO_EXPERIMENTAL_TRANSACTIONAL_MEMORY_V2

#endif /* _LIBCXX_TRANSACTIONAL_MEMORY */
